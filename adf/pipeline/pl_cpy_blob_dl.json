{
	"name": "pl_cpy_blob_dl",
	"properties": {
		"activities": [
			{
				"name": "read files lookup",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "set azure sql schema names per env",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "ds_read_lookup",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "iterate_lookup_file",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "read files lookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('read files lookup').output.value[0].data",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "set_ip_filename",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "input_file",
								"value": {
									"value": "@item().SOURCE_FILE",
									"type": "Expression"
								}
							}
						},
						{
							"name": "set_op_filename",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "output_file",
								"value": {
									"value": "@item().TARGET_FILE",
									"type": "Expression"
								}
							}
						},
						{
							"name": "copy_based_on_file",
							"type": "Switch",
							"dependsOn": [
								{
									"activity": "set_op_filename",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "set_ip_filename",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@split(variables('input_file'), '.')[sub(length(split(variables('input_file'), '.')), 1)]\n\n",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "json",
										"activities": [
											{
												"name": "copy_blob_datalake",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "JsonSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "JsonReadSettings"
														}
													},
													"sink": {
														"type": "JsonSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "FlattenHierarchy"
														},
														"formatSettings": {
															"type": "JsonWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "ds_blob_json",
														"type": "DatasetReference",
														"parameters": {
															"file_name": {
																"value": "@variables('input_file')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_json_datalake_landing",
														"type": "DatasetReference",
														"parameters": {
															"file_name": {
																"value": "@variables('output_file')",
																"type": "Expression"
															},
															"curr_date": {
																"value": "@formatDateTime(utcnow(),'yyyy-MM-dd')",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Execute Pipeline2",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "copy_blob_datalake",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_raw_to_cleansed_for_json",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"file_name": {
															"value": "@variables('output_file')",
															"type": "Expression"
														}
													}
												}
											}
										]
									},
									{
										"value": "txt",
										"activities": [
											{
												"name": "copy_txt",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_blob_text",
														"type": "DatasetReference",
														"parameters": {
															"file_name": {
																"value": "@variables('input_file')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_txt_datalake_landing",
														"type": "DatasetReference",
														"parameters": {
															"filename": {
																"value": "@variables('output_file')",
																"type": "Expression"
															},
															"curr_date": "@formatDateTime(utcnow(),'yyyy-MM-dd')"
														}
													}
												]
											},
											{
												"name": "Execute Pipeline1",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "copy_txt",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_raw-to_cleansed_for_text",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"filename": {
															"value": "@variables('output_file')",
															"type": "Expression"
														}
													}
												}
											}
										]
									},
									{
										"value": "parquet",
										"activities": [
											{
												"name": "Copy data1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ParquetSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "ParquetReadSettings"
														}
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_blob_parquet",
														"type": "DatasetReference",
														"parameters": {
															"filename": {
																"value": "@variables('input_file')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_parquet_datalake_landing",
														"type": "DatasetReference",
														"parameters": {
															"filename": {
																"value": "@variables('output_file')",
																"type": "Expression"
															},
															"curr_date": {
																"value": "@formatDateTime(utcnow(),'yyyy-MM-dd')",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Execute Pipeline3",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "Copy data1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_raw_to_cleansed_for parquet",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"file_name": {
															"value": "@variables('output_file')",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Execute Pipeline4",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "iterate_lookup_file",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_cleansed_to_structured",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"schema_name": {
							"value": "@variables('schema_name')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Execute Pipeline5",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Execute Pipeline4",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_structured_to_analytics",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"schema_name": {
							"value": "@variables('schema_name')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "set azure sql schema names per env",
				"description": "added commentss reqd",
				"type": "Switch",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@pipeline().globalParameters.environment",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "dev",
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "schema_name",
										"value": {
											"value": "orders",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"value": "prod",
							"activities": [
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "schema_name",
										"value": "orders_prod"
									}
								}
							]
						}
					]
				}
			}
		],
		"variables": {
			"input_file": {
				"type": "String"
			},
			"output_file": {
				"type": "String"
			},
			"file_name_lkp_path": {
				"type": "String"
			},
			"folder_name_lookup": {
				"type": "String"
			},
			"cleansed_container": {
				"type": "String"
			},
			"STRUCTURED_CONTAINER": {
				"type": "String"
			},
			"ANALYTICS_CONTAINER": {
				"type": "String"
			},
			"curr_folder": {
				"type": "String"
			},
			"array_all_folders": {
				"type": "Array"
			},
			"schema_name": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-12-09T06:04:26Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}